(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{668:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var toConsumableArray=__webpack_require__(65),objectSpread2=__webpack_require__(18),slicedToArray=__webpack_require__(17),react=__webpack_require__(0),react_default=__webpack_require__.n(react),IconButton=__webpack_require__(241),createSvgIcon=__webpack_require__(24),CheckBox=Object(createSvgIcon.a)(react_default.a.createElement("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),CheckBoxOutlineBlank=Object(createSvgIcon.a)(react_default.a.createElement("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),IndeterminateCheckBox=Object(createSvgIcon.a)(react_default.a.createElement("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox"),FormLabel=__webpack_require__(1466),labels_labelForm=function LabelForm(props){return react_default.a.createElement(FormLabel.a,{htmlFor:props.content.forId},props.content.text)};try{labelForm.displayName="labelForm",labelForm.__docgenInfo={description:"",displayName:"labelForm",props:{content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"{ text: string; forId?: string | undefined; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/labels/labelForm.tsx#labelForm"]={docgenInfo:labelForm.__docgenInfo,name:"labelForm",path:"src/stories/labels/labelForm.tsx#labelForm"})}catch(__react_docgen_typescript_loader_error){}try{labelForm.displayName="labelForm",labelForm.__docgenInfo={description:"",displayName:"labelForm",props:{content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"{ text: string; forId?: string | undefined; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/labels/labelForm.tsx#labelForm"]={docgenInfo:labelForm.__docgenInfo,name:"labelForm",path:"src/stories/labels/labelForm.tsx#labelForm"})}catch(__react_docgen_typescript_loader_error){}var defaultCheckboxIconShapes={checkedIcon:react_default.a.createElement(CheckBox,null),unCheckedIcon:react_default.a.createElement(CheckBoxOutlineBlank,null),intermidiateIcon:react_default.a.createElement(IndeterminateCheckBox,null)},defaultCheckboxIconValues={unCheckedIconValue:!1,checkIconValue:!0,intermidateIconValue:void 0};__webpack_exports__.default=function CheckboxDefault(props){var options=props.options?props.options:{iconShape:defaultCheckboxIconShapes,iconValues:defaultCheckboxIconValues},iconShape=options.iconShape?options.iconShape:defaultCheckboxIconShapes,iconValue=options.iconValues?options.iconValues:defaultCheckboxIconValues,_useReducer=Object(react.useReducer)((function(state,action){var newState=Object(objectSpread2.a)({},state),newValueArr=Object(toConsumableArray.a)(newState.valueArr),newShapeArr=Object(toConsumableArray.a)(newState.shapeArr);return options.iconValues&&options.iconValues.intermidateIconValue&&(newValueArr.push(iconValue.intermidateIconValue),newShapeArr.push(iconShape.intermidiateIcon)),Object(objectSpread2.a)(Object(objectSpread2.a)({},newState),{},{valueArr:newValueArr,shapeArr:newShapeArr})}),{valueArr:[iconValue.unCheckedIconValue,iconValue.checkIconValue],shapeArr:[iconShape.unCheckedIcon,iconShape.checkedIcon]}),_useReducer2=Object(slicedToArray.a)(_useReducer,2),optionsState=_useReducer2[0],optionsDispatch=_useReducer2[1],_useReducer3=Object(react.useReducer)((function(state,payload){var newState=Object(objectSpread2.a)({},state);return newState.count<optionsState.valueArr.length-1?newState.count=newState.count+1:newState.count=0,Object(objectSpread2.a)({},newState)}),{count:0}),_useReducer4=Object(slicedToArray.a)(_useReducer3,2),countState=_useReducer4[0],changeCountDispatch=_useReducer4[1],_useReducer5=Object(react.useReducer)((function(state,payload){var newState=Object(objectSpread2.a)({},state);return newState.value=optionsState.valueArr[payload],Object(objectSpread2.a)({},newState)}),{name:props.content.keyId,id:props.content.keyId,value:optionsState.valueArr[countState.count]}),_useReducer6=Object(slicedToArray.a)(_useReducer5,2),changeHandleState=_useReducer6[0],changeHandleDispatch=_useReducer6[1];Object(react.useEffect)((function(){optionsDispatch()}),[]);var formLabel=Object(react.useMemo)((function(){return props.content.label?react_default.a.createElement(labels_labelForm,{content:{text:props.content.label,forId:props.content.keyId}}):null}),[props.content.keyId,props.content.label]),iconButton=Object(react.useMemo)((function(){return react_default.a.createElement(IconButton.a,{name:props.content.keyId,id:props.content.keyId,defaultValue:props.content.defaultValue,value:optionsState.valueArr[countState.count],onClick:function onClick(){changeCountDispatch(),changeHandleDispatch(countState.count),props.handleChange({target:Object(objectSpread2.a)({},changeHandleState)})}},optionsState.shapeArr[countState.count])}),[countState.count,props,optionsState,changeHandleState]);return react_default.a.createElement("div",null,iconButton,formLabel)};try{checkboxDefault.displayName="checkboxDefault",checkboxDefault.__docgenInfo={description:"",displayName:"checkboxDefault",props:{handleChange:{defaultValue:null,description:"",name:"handleChange",required:!0,type:{name:"(event: any) => void"}},content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"CheckBoxContent"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"{ iconShape?: CheckBoxIconShapes; iconValues?: CheckBoxIconValues | undefined; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/checkbox/checkboxDefault.tsx#checkboxDefault"]={docgenInfo:checkboxDefault.__docgenInfo,name:"checkboxDefault",path:"src/stories/checkbox/checkboxDefault.tsx#checkboxDefault"})}catch(__react_docgen_typescript_loader_error){}try{checkboxDefault.displayName="checkboxDefault",checkboxDefault.__docgenInfo={description:"",displayName:"checkboxDefault",props:{handleChange:{defaultValue:null,description:"",name:"handleChange",required:!0,type:{name:"(event: any) => void"}},content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"CheckBoxContent"}},options:{defaultValue:null,description:"",name:"options",required:!1,type:{name:"{ iconShape?: CheckBoxIconShapes; iconValues?: CheckBoxIconValues | undefined; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/stories/checkbox/checkboxDefault.tsx#checkboxDefault"]={docgenInfo:checkboxDefault.__docgenInfo,name:"checkboxDefault",path:"src/stories/checkbox/checkboxDefault.tsx#checkboxDefault"})}catch(__react_docgen_typescript_loader_error){}}}]);
//# sourceMappingURL=1.cb96996704fc151fc3e8.bundle.js.map